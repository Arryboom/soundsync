name: Build/release

on: push

jobs:
  build-webui:
    name: Build WebUI
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install shared deps
        run: yarn

      - name: Install webui deps
        working-directory: ./webui
        run: yarn

      - name: Build webui
        working-directory: ./webui
        run: yarn build

      - uses: actions/upload-artifact@v1
        with:
          name: webui-dist
          path: ./webui/dist

  build-executable:
    name: Build executable
    needs: build-webui
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        # - macos-latest
        - windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Download Webui dist
        uses: actions/download-artifact@v1
        with:
          name: webui-dist
          path: webui/dist

      - name: Install requirements
        run: apt-get -y install bsdtar

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Clean build directory
        shell: bash
        run: ./scripts/clean_build.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: soundsync-${{ runner.os }}
          path: bin

  crosscompile:
    name: Build executable for ARM
    needs: build-webui
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v1

    - name: Download Webui dist
      uses: actions/download-artifact@v1
      with:
        name: webui-dist
        path: webui/dist

    - name: Build for raspberrypi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        IS_GITHUB_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: ./scripts/compile_for_raspberrypi.sh

    - name: Clean build directory
      shell: bash
      run: sudo ./scripts/clean_build.sh

    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: soundsync-linux-armv7l
        path: bin/
